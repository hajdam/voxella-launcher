/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.voxella.launcher.gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.datatransfer.StringSelection;
import java.awt.event.MouseEvent;
import java.awt.font.TextAttribute;
import java.util.HashMap;
import java.util.ResourceBundle;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.JLabel;
import javax.swing.JPopupMenu;
import javax.swing.event.HyperlinkEvent;
import org.exbin.voxella.launcher.api.utils.DesktopUtils;
import org.exbin.voxella.launcher.api.utils.UiUtils;
import org.exbin.voxella.launcher.popup.DefaultPopupMenu;
import org.exbin.voxella.launcher.popup.LinkActionsHandler;
import org.exbin.voxella.launcher.utils.ClipboardUtils;

/**
 * About launcher panel.
 *
 * @author Voxella Project
 */
@ParametersAreNonnullByDefault
public class AboutPanel extends javax.swing.JPanel {

    private final ResourceBundle resourceBundle = ResourceBundle.getBundle("org/exbin/voxella/launcher/gui/resources/AboutPanel");

    public AboutPanel() {
        initComponents();
        init();
    }

    private void init() {
        boolean darkMode = UiUtils.isDarkUI();
        if (darkMode) {
            aboutHeaderPanel.setBackground(Color.BLACK);
            appTitleLabel.setForeground(Color.WHITE);
            appDescLabel.setForeground(Color.WHITE);
        }

        resourcesEditorPane.addHyperlinkListener((HyperlinkEvent e) -> {
            if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                DesktopUtils.openDesktopURL(e.getURL());
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutHeaderPanel = new javax.swing.JPanel();
        headerSeparator = new javax.swing.JSeparator();
        aboutHeaderTitlePanel = new javax.swing.JPanel();
        appDescLabel = new javax.swing.JLabel();
        appTitleLabel = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        javax.swing.JLabel nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        javax.swing.JLabel versionLabel = new javax.swing.JLabel();
        versionTextField = new javax.swing.JTextField();
        javax.swing.JLabel vendorLabel = new javax.swing.JLabel();
        vendorTextField = new javax.swing.JTextField();
        javax.swing.JLabel appLicenseLabel = new javax.swing.JLabel();
        licenseTextField = new javax.swing.JTextField();
        javax.swing.JLabel homepageLabel = new javax.swing.JLabel();
        appHomepageLabel = new javax.swing.JLabel();
        resourcesLabel = new javax.swing.JLabel();
        resourcesScrollPane = new javax.swing.JScrollPane();
        resourcesEditorPane = new javax.swing.JEditorPane();

        setLayout(new java.awt.BorderLayout());

        aboutHeaderPanel.setBackground(new java.awt.Color(255, 255, 255));
        aboutHeaderPanel.setLayout(new java.awt.BorderLayout());
        aboutHeaderPanel.add(headerSeparator, java.awt.BorderLayout.SOUTH);

        aboutHeaderTitlePanel.setOpaque(false);

        appDescLabel.setForeground(java.awt.Color.black);
        appDescLabel.setText(resourceBundle.getString("appDescLabel.text")); // NOI18N

        appTitleLabel.setFont(appTitleLabel.getFont().deriveFont(appTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, appTitleLabel.getFont().getSize()+4));
        appTitleLabel.setForeground(java.awt.Color.black);
        appTitleLabel.setText(resourceBundle.getString("appTitleLabel.text")); // NOI18N

        javax.swing.GroupLayout aboutHeaderTitlePanelLayout = new javax.swing.GroupLayout(aboutHeaderTitlePanel);
        aboutHeaderTitlePanel.setLayout(aboutHeaderTitlePanelLayout);
        aboutHeaderTitlePanelLayout.setHorizontalGroup(
            aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
            .addGroup(aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aboutHeaderTitlePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(appDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(appTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        aboutHeaderTitlePanelLayout.setVerticalGroup(
            aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
            .addGroup(aboutHeaderTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aboutHeaderTitlePanelLayout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(appTitleLabel)
                    .addGap(7, 7, 7)
                    .addComponent(appDescLabel)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        aboutHeaderPanel.add(aboutHeaderTitlePanel, java.awt.BorderLayout.CENTER);

        add(aboutHeaderPanel, java.awt.BorderLayout.PAGE_START);

        nameLabel.setFont(nameLabel.getFont().deriveFont(nameLabel.getFont().getStyle() | java.awt.Font.BOLD));
        nameLabel.setText(resourceBundle.getString("nameLabel.text")); // NOI18N

        nameTextField.setEditable(false);
        nameTextField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        nameTextField.setBorder(null);

        versionLabel.setFont(versionLabel.getFont().deriveFont(versionLabel.getFont().getStyle() | java.awt.Font.BOLD));
        versionLabel.setText(resourceBundle.getString("versionLabel.text")); // NOI18N

        versionTextField.setEditable(false);
        versionTextField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        versionTextField.setBorder(null);

        vendorLabel.setFont(vendorLabel.getFont().deriveFont(vendorLabel.getFont().getStyle() | java.awt.Font.BOLD));
        vendorLabel.setText(resourceBundle.getString("vendorLabel.text")); // NOI18N

        vendorTextField.setEditable(false);
        vendorTextField.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        vendorTextField.setBorder(null);

        appLicenseLabel.setFont(appLicenseLabel.getFont().deriveFont(appLicenseLabel.getFont().getStyle() | java.awt.Font.BOLD));
        appLicenseLabel.setText(resourceBundle.getString("appLicenseLabel.text")); // NOI18N

        licenseTextField.setEditable(false);
        licenseTextField.setFont(new java.awt.Font("Dialog 12", 1, 12)); // NOI18N
        licenseTextField.setBorder(null);

        homepageLabel.setFont(homepageLabel.getFont().deriveFont(homepageLabel.getFont().getStyle() | java.awt.Font.BOLD));
        homepageLabel.setText(resourceBundle.getString("homepageLabel.text")); // NOI18N

        appHomepageLabel.setForeground(java.awt.Color.blue);
        appHomepageLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HashMap<TextAttribute, Object> attribs = new HashMap<TextAttribute, Object>();
        attribs.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_LOW_ONE_PIXEL);
        appHomepageLabel.setFont(appHomepageLabel.getFont().deriveFont(attribs));
        appHomepageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appHomepageLabelMouseClicked(evt);
            }
        });

        resourcesLabel.setText(resourceBundle.getString("resourcesLabel.text")); // NOI18N

        resourcesEditorPane.setEditable(false);
        resourcesEditorPane.setContentType("text/html"); // NOI18N
        resourcesEditorPane.setText("<html>\n  <head>\n  </head>\n  <body>\n    <p>Tango icon library:<br/><a href=\"http://tango.freedesktop.org/Tango_Icon_Library\">http://tango.freedesktop.org/Tango_Icon_Library</a></p>\n<p>Open Icon Library:<br/><a href=\"https://sourceforge.net/projects/openiconlibrary/\">https://sourceforge.net/projects/openiconlibrary/</a></p>\n<p>Fam fam fam flag icons:<br/><a href=\"http://www.famfamfam.com\">http://www.famfamfam.com</a></p>\n    </p>\n  </body>\n</html>\n");
        resourcesScrollPane.setViewportView(resourcesEditorPane);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resourcesScrollPane)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vendorLabel)
                            .addComponent(homepageLabel)
                            .addComponent(appLicenseLabel)
                            .addComponent(versionLabel)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                            .addComponent(vendorTextField)
                            .addComponent(licenseTextField)
                            .addComponent(appHomepageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(versionTextField)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(resourcesLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(versionLabel)
                    .addComponent(versionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorLabel)
                    .addComponent(vendorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appLicenseLabel)
                    .addComponent(licenseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homepageLabel)
                    .addComponent(appHomepageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resourcesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resourcesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(mainPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void appHomepageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appHomepageLabelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1 && !evt.isPopupTrigger()) {
            String targetURL = ((JLabel) evt.getSource()).getText();
            DesktopUtils.openDesktopURL(targetURL);
        }
    }//GEN-LAST:event_appHomepageLabelMouseClicked

    public void setAboutInfo(AboutInfo aboutInfo) {
        appTitleLabel.setText(aboutInfo.title);
        appDescLabel.setText(aboutInfo.description);
        nameTextField.setText(aboutInfo.name);
        versionTextField.setText(aboutInfo.version);
        vendorTextField.setText(aboutInfo.vendor);
        licenseTextField.setText(aboutInfo.license);
        appHomepageLabel.setText(aboutInfo.homepage);
        appHomepageLabel.setComponentPopupMenu(new JPopupMenu() {
            private boolean initialized = false;

            @Override
            public void show(Component invoker, int x, int y) {
                if (!initialized) {
                    DefaultPopupMenu.getInstance().appendLinkMenu(this, new LinkActionsHandler() {
                        @Override
                        public void performCopyLink() {
                            String targetURL = appHomepageLabel.getText();
                            StringSelection stringSelection = new StringSelection(targetURL);
                            ClipboardUtils.getClipboard().setContents(stringSelection, stringSelection);
                        }

                        @Override
                        public void performOpenLink() {
                            String targetURL = appHomepageLabel.getText();
                            DesktopUtils.openDesktopURL(targetURL);
                        }

                        @Override
                        public boolean isLinkSelected() {
                            return true;
                        }
                    });

                    initialized = true;
                }
                super.show(invoker, x, y);
            }
        });

        if (aboutInfo.aboutImage != null) {
            JLabel imageLabel = new JLabel();
            imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(aboutInfo.aboutImage)));
            aboutHeaderPanel.add(imageLabel, BorderLayout.WEST);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutHeaderPanel;
    private javax.swing.JPanel aboutHeaderTitlePanel;
    private javax.swing.JLabel appDescLabel;
    private javax.swing.JLabel appHomepageLabel;
    private javax.swing.JLabel appTitleLabel;
    private javax.swing.JSeparator headerSeparator;
    private javax.swing.JTextField licenseTextField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JEditorPane resourcesEditorPane;
    private javax.swing.JLabel resourcesLabel;
    private javax.swing.JScrollPane resourcesScrollPane;
    private javax.swing.JTextField vendorTextField;
    private javax.swing.JTextField versionTextField;
    // End of variables declaration//GEN-END:variables

    public static class AboutInfo {

        public String title;
        public String description;
        public String name;
        public String version;
        public String vendor;
        public String license;
        public String homepage;
        public String aboutImage;
    }
}
