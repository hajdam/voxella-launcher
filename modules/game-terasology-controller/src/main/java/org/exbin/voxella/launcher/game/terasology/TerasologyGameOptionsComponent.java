/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.voxella.launcher.game.terasology;

import java.awt.Component;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.ResourceBundle;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import org.exbin.voxella.launcher.game.terasology.JavaHeapSize;

/**
 * Options component.
 *
 * @author Voxella Project
 */
@ParametersAreNonnullByDefault
public class TerasologyGameOptionsComponent extends javax.swing.JPanel {

    private final ResourceBundle resourceBundle = ResourceBundle.getBundle("org/exbin/voxella/launcher/game/terasology/resources/TerasologyGameOptionsComponent");

    private final Map<JavaHeapSize, String> heapSizes = new HashMap<>();

    public TerasologyGameOptionsComponent() {
        initComponents();
        init();
    }

    private void init() {
        DecimalFormat format = (DecimalFormat) DecimalFormat.getInstance();
        char decimalSeparator = format.getDecimalFormatSymbols().getDecimalSeparator();
        for (JavaHeapSize heapSize : JavaHeapSize.values()) {
            switch (heapSize) {
                case NOT_USED: {
                    heapSizes.put(heapSize, resourceBundle.getString("heapSize.notUsed"));
                    break;
                }
                default: {
                    String labelKey = heapSize.getLabelKey();
                    String text;
                    if (labelKey.startsWith("heapsize_mb_")) {
                        text = labelKey.substring(12) + " MB";
                    } else {
                        text = labelKey.substring(12).replace('_', decimalSeparator) + " GB";
                    }
                    heapSizes.put(heapSize, text);
                }
            }
        }

        initMemoryComboBox.setModel(new DefaultComboBoxModel<>(JavaHeapSize.values()));
        initMemoryComboBox.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                Component component = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                setText(heapSizes.get((JavaHeapSize) value));
                return component;
            }
        });
        maximumMemoryComboBox.setModel(new DefaultComboBoxModel<>(JavaHeapSize.values()));
        maximumMemoryComboBox.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                Component component = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                setText(heapSizes.get((JavaHeapSize) value));
                return component;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        mainPanel = new javax.swing.JPanel();
        engineVersionLabel = new javax.swing.JLabel();
        engineVersionComboBox = new javax.swing.JComboBox<>();
        javaRuntimeLabel = new javax.swing.JLabel();
        javaRuntimeComboBox = new javax.swing.JComboBox<>();
        initMemoryLabel = new javax.swing.JLabel();
        initMemoryComboBox = new javax.swing.JComboBox<>();
        maximumMemoryLabel = new javax.swing.JLabel();
        maximumMemoryComboBox = new javax.swing.JComboBox<>();
        advancedPanel = new javax.swing.JPanel();
        javaArgsLabel = new javax.swing.JLabel();
        javaArgsScrollPane = new javax.swing.JScrollPane();
        javaArgsTextArea = new javax.swing.JTextArea();
        gameArgsLabel = new javax.swing.JLabel();
        gameArgsScrollPane = new javax.swing.JScrollPane();
        gameArgsTextArea = new javax.swing.JTextArea();
        loggingLevelLabel = new javax.swing.JLabel();
        loggingLevelComboBox = new javax.swing.JComboBox<>();

        setLayout(new java.awt.BorderLayout());

        engineVersionLabel.setText(resourceBundle.getString("engineVersionLabel.text")); // NOI18N

        javaRuntimeLabel.setText(resourceBundle.getString("javaRuntimeLabel.text")); // NOI18N

        initMemoryLabel.setText(resourceBundle.getString("initMemoryLabel.text")); // NOI18N

        maximumMemoryLabel.setText(resourceBundle.getString("maximumMemoryLabel.text")); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(engineVersionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(javaRuntimeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(engineVersionLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(javaRuntimeLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maximumMemoryLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(initMemoryLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(initMemoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(maximumMemoryComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 213, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(engineVersionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(engineVersionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(javaRuntimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(javaRuntimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(initMemoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(initMemoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maximumMemoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maximumMemoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        tabbedPane.addTab(resourceBundle.getString("mainPanel.tabTitle"), mainPanel); // NOI18N

        javaArgsLabel.setText(resourceBundle.getString("javaArgsLabel.text")); // NOI18N

        javaArgsTextArea.setColumns(20);
        javaArgsTextArea.setRows(5);
        javaArgsScrollPane.setViewportView(javaArgsTextArea);

        gameArgsLabel.setText(resourceBundle.getString("gameArgsLabel.text")); // NOI18N

        gameArgsTextArea.setColumns(20);
        gameArgsTextArea.setRows(5);
        gameArgsScrollPane.setViewportView(gameArgsTextArea);

        loggingLevelLabel.setText(resourceBundle.getString("loggingLevelLabel.text")); // NOI18N

        loggingLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ERROR", "WARN", "INFO", "DEBUG", "TRACE" }));
        loggingLevelComboBox.setSelectedIndex(2);

        javax.swing.GroupLayout advancedPanelLayout = new javax.swing.GroupLayout(advancedPanel);
        advancedPanel.setLayout(advancedPanelLayout);
        advancedPanelLayout.setHorizontalGroup(
            advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(advancedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(advancedPanelLayout.createSequentialGroup()
                        .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(javaArgsLabel)
                            .addComponent(gameArgsLabel)
                            .addComponent(loggingLevelLabel)
                            .addComponent(loggingLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 234, Short.MAX_VALUE))
                    .addComponent(gameArgsScrollPane)
                    .addComponent(javaArgsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        advancedPanelLayout.setVerticalGroup(
            advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(advancedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(javaArgsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(javaArgsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameArgsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameArgsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggingLevelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggingLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        tabbedPane.addTab(resourceBundle.getString("advancedPanel.tabTitle"), advancedPanel); // NOI18N

        add(tabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel advancedPanel;
    private javax.swing.JComboBox<String> engineVersionComboBox;
    private javax.swing.JLabel engineVersionLabel;
    private javax.swing.JLabel gameArgsLabel;
    private javax.swing.JScrollPane gameArgsScrollPane;
    private javax.swing.JTextArea gameArgsTextArea;
    private javax.swing.JComboBox<JavaHeapSize> initMemoryComboBox;
    private javax.swing.JLabel initMemoryLabel;
    private javax.swing.JLabel javaArgsLabel;
    private javax.swing.JScrollPane javaArgsScrollPane;
    private javax.swing.JTextArea javaArgsTextArea;
    private javax.swing.JComboBox<String> javaRuntimeComboBox;
    private javax.swing.JLabel javaRuntimeLabel;
    private javax.swing.JComboBox<String> loggingLevelComboBox;
    private javax.swing.JLabel loggingLevelLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<JavaHeapSize> maximumMemoryComboBox;
    private javax.swing.JLabel maximumMemoryLabel;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
}
